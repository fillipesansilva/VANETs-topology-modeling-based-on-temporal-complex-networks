This is an implementation of the temporal centrality statistics proposed by Hyounshick Kim and Ross Anderson on their paper "Temporal Node Centrality in Complex Networks" available at http://journals.aps.org/pre/abstract/10.1103/PhysRevE.85.026107.

Disclaimer:

I was not able to implement the temporal betweenness centrality exactly as stated on their paper, mainly because I did not understand the way the authors compute the normalization constant.

In this implementation, if there is a path that requires waiting at a particular node for k timesteps, the path is only counted once instead of k times as in the paper. The normalization constant for the temporal betweennes is (0.5*(n-1)*(n-2)*m) where m = timestemps in the temporal graph, n = number of vertices in the static graph.


How to run:
1. make the download of all datasets on https://drive.google.com/open?id=1kotHIXljNZnioO2Lo9RliVD7XxYcRA5y and place each file in the right folder like below.
Analisador/data
Analisador/result
Analisador/result-agg
Analisador/matrix2.dat
Analisador/matrix-9s-agg.dat
Analisador/matrix-9s-temp.dat
Analisador/S2.dat
DataSets/COLONIA
DataSets/MADRID

2. Running centrality measures:
	2.1 Codigos/Graph Metrics/main.py
	2.2 Codigos/Outros/D,MMM,CC.R

3. Find the RSUs.
	3.1 Analisador/Guloso.py

